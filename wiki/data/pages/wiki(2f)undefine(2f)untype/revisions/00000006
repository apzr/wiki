## page was renamed from wiki/undefine/undefine

Git配置代理
{{{
git config http.proxy http://14.119.115.179:3128
git config https.proxy https://14.119.115.179:3128
}}}

Git设置为全局代理
{{{
git config --global http.proxy http://14.119.115.179:3128
git config --global https.proxy https://14.119.115.179:3128
}}}

Git取消代理设置
{{{
git config --global --unset http.proxy:3128
git config --global --unset https.proxy:3128
}}}

Git查看config配置
{{{
git config --global -e
}}}

git新建仓库
{{{
1. make a new gist on github then copy url

2. git clone https://your.new.empty.git

3. copy your files to the git forder

4. git add
   git commit -m "comment"
   git push -u origin master
}}}

git 提交流程
{{{
Administrator@PCDXIT MINGW64 /f/moin (master)
$ git add .

Administrator@PCDXIT MINGW64 /f/moin (master)
$ git commit -m "test"
[master d3d5677] test
1 file changed, 0 insertions(+), 0 deletions(-)
create mode 100644 test.txt

Administrator@PCDXIT MINGW64 /f/moin (master)
$ git push -u origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 313 bytes | 313.00 KiB/s,  done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/apzr/wiki.git
   a790211..d3d5677  master -> master
Branch 'master' set up to track remote branch 'master'  from 'origin'.
}}}

git更新远程已经重命名了的本地branch
{{{
Administrator@PCDXIT MINGW64 /f/moin (main)
$ dir
README.md  wiki

Administrator@PCDXIT MINGW64 /f/moin (main)
$ git branch -m main master

Administrator@PCDXIT MINGW64 /f/moin (master)
$ git fetch origin
From https://github.com/apzr/wiki
* [new branch]      master     -> origin/master

Administrator@PCDXIT MINGW64 /f/moin (master)
$ git branch -u origin/master master
Branch 'master' set up to track remote branch 'master'  from 'origin'.

Administrator@PCDXIT MINGW64 /f/moin (master)
$ git remote set-head origin -a
origin/HEAD set to master
}}}


<html>
<head>
  <title>杂项</title>
  <basefont face="微软雅黑" size="2" />
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
  <meta name="exporter-version" content="YXBJ Windows/602988 (zh-CN, DDL); Windows/6.1.1 (Win64); EDAMVersion=V2;"/>
  <style>
    body, td {
      font-family: 微软雅黑;
      font-size: 10pt;
    }
  </style>
</head>
<body>
<a name="805"/>
<h1>杂项</h1>

<div>
<span><div><br/></div><div><span style="color: rgb(214, 214, 214);">更新t_mobil_pic表中pic_code字段</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>UPDATE t_mobile_pic</div><div>SET pic_code = user_code + CONVERT ( VARCHAR ( 8 ), create_date, 112 ) + replace( CONVERT ( VARCHAR ( 8 ), create_date, 108 ), ':', '' )</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">安装本地依赖</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>mvn install:install-file -Dfile=wxpay-sdk-3.0.9.jar -DgroupId=com.yuepong.jdev -DartifactId=jdev-redis -Dversion=1.0.1 -Dpackaging=jar</div></div><div><br/></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">拉个包</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>mvn dependency:get -DremoteRepositories=http://192.168.0.207:7081/repository/maven-snapshots/ -DgroupId=com.yuepong.jdev -DartifactId=jdev-redis -Dversion=1.0-20210413.063037-11</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">windows杀掉相关名字的全部进程</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>taskkill /F /IM powershell.exe /T</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">linux数字权限释义</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>chmod 754 filename</div></div><div><div><br/></div><table style="border-collapse: collapse; min-width: 100%;"><colgroup><col style="width: 54px;"></col><col style="width: 68px;"></col><col style="width: 86px;"></col><col style="width: 120px;"></col><col style="width: 86px;"></col></colgroup><tbody><tr><td style="width: 54px; padding: 8px; border: 1px solid;"><div>权限</div></td><td style="width: 68px; padding: 8px; border: 1px solid;"><div>数值</div></td><td style="width: 86px; padding: 8px; border: 1px solid;"><div>二进制</div></td><td style="width: 120px; padding: 8px; border: 1px solid;"><div><br/></div></td><td style="width: 86px; padding: 8px; border: 1px solid;"><div><br/></div></td></tr><tr><td style="width: 54px; padding: 8px; border: 1px solid;"><div>r</div></td><td style="width: 68px; padding: 8px; border: 1px solid;"><div>4</div></td><td style="width: 86px; padding: 8px; border: 1px solid;"><div><span style="font-size: 14px; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: rgb(79, 79, 79); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-variant-caps: normal; font-variant-ligatures: normal;">00000100</span></div></td><td style="width: 120px; padding: 8px; border: 1px solid;"><div><span style="font-size: 16px; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: rgb(77, 77, 77); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-variant-caps: normal; font-variant-ligatures: normal;">7 =</span><span style="font-size: 16px; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: rgb(77, 77, 77); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-variant-caps: normal; font-variant-ligatures: normal;">4 + 2 + 1</span></div></td><td style="width: 86px; padding: 8px; border: 1px solid;"><div>读写运行</div></td></tr><tr><td style="width: 54px; padding: 8px; border: 1px solid;"><div>w</div></td><td style="width: 68px; padding: 8px; border: 1px solid;"><div>2</div></td><td style="width: 86px; padding: 8px; border: 1px solid;"><div><span style="font-size: 14px; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(247, 247, 247); color: rgb(79, 79, 79); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-variant-caps: normal; font-variant-ligatures: normal;">00000010</span></div></td><td style="width: 120px; padding: 8px; border: 1px solid;"><div><span style="font-size: 16px; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: rgb(77, 77, 77); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-variant-caps: normal; font-variant-ligatures: normal;">5 = 4 + 1    </span></div></td><td style="width: 86px; padding: 8px; border: 1px solid;"><div>读运行</div></td></tr><tr><td style="width: 54px; padding: 8px; border: 1px solid;"><div>x</div></td><td style="width: 68px; padding: 8px; border: 1px solid;"><div>1</div></td><td style="width: 86px; padding: 8px; border: 1px solid;"><div><span style="font-size: 14px; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: rgb(79, 79, 79); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-variant-caps: normal; font-variant-ligatures: normal;">00000001</span></div></td><td style="width: 120px; padding: 8px; border: 1px solid;"><div><span style="font-size: 16px; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; color: rgb(77, 77, 77); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-variant-caps: normal; font-variant-ligatures: normal;">4 = 4</span></div></td><td style="width: 86px; padding: 8px; border: 1px solid;"><div>读</div></td></tr></tbody></table><div><br/></div></div><div><span style="color: rgb(214, 214, 214);">sql server 临时表查询</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>IF EXISTS ( </div><div>    SELECT * FROM tempdb..sysobjects </div><div>    WHERE id = object_id( 'tempdb..##online_foods_stock0931' ) </div><div>) DROP TABLE ##online_foods_stock0931</div></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>SELECT * FROM tempdb..sysobjects where name like '##onlineFoods%' ORDER BY name desc</div></div><div><br/></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">python update pip</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>WARNING: You are using pip version 20.2.1; however, version 21.0.1 is available.</div><div>You should consider upgrading via the </div><div>'e:\program_flies\python\python.exe -m pip install --upgrade pip' </div><div>command.</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">Linux查看path</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>[root@localhost ~]# export</div><div>declare -x CLASSPATH=&quot;.:/usr/local/java/jdk1.8.0_221/lib:/usr/local/java/jdk1.8.0_221/jre/lib:&quot;</div><div>declare -x HISTCONTROL=&quot;ignoredups&quot;</div><div>declare -x HISTSIZE=&quot;1000&quot;</div><div>declare -x HOME=&quot;/root&quot;</div><div>declare -x HOSTNAME=&quot;localhost.localdomain&quot;</div><div>declare -x JAVA_HOME=&quot;/usr/local/java/jdk1.8.0_221&quot;</div><div>declare -x JAVA_PATH=&quot;/usr/local/java/jdk1.8.0_221/bin:/usr/local/java/jdk1.8.0_221/jre/bin&quot;</div><div>declare -x JRE_HOME=&quot;/usr/local/java/jdk1.8.0_221/jre&quot;</div><div>...</div><div>...</div><div>...</div><div>declare -x XDG_SESSION_ID=&quot;1584&quot;</div><div><br/></div></div><div><br/></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">命令行打开</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>我的电脑</div><div>explorer.exe ::{20D04FE0-3AEA-1069-A2D8-08002B30309D}</div><div>网上邻居</div><div>explorer.exe ::{208D2C60-3AEA-1069-A2D7-08002B30309D}</div><div>回收站</div><div>explorer.exe ::{645FF040-5081-101B-9F08-00AA002F954E}</div><div>IE</div><div>iexplore -new</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">java8单例</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>public class Obj{</div><div>    private static Obj OBJ;</div><div>    public static Obj newInstance(){ return OBJ = Optional.ofNullable(OBJ).orElse(new Obj()); }</div><div>}</div></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>public class Obj{</div><div>    private static Obj OBJ;</div><div>    public static Obj newInstance() {</div><div>        if (OBJ == null) {</div><div>            synchronized (Obj.class) {</div><div>                if (OBJ == null) {</div><div>                    OBJ = new Obj();</div><div>                }</div><div>            }</div><div>        }</div><div>        return OBJ;</div><div>    }</div><div>}</div></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>/**</div><div>* 生成缓存键</div><div>*</div><div>* @param params</div><div>* @return</div><div>*/</div><div>public String keyGen(Object... params){</div><div>    StringBuilder key = new StringBuilder();</div><div>    Arrays.stream(params).forEach(p -&gt; { key.append(p==null?&quot;null&quot;:p.toString()).append(&quot;:&quot;); });</div><div>    return key.toString();//.hashCode();</div><div>}</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">redis-dump导出</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>redis-dump -u 127.0.0.1:6379 &gt; test.json</div><div># 指定数据库</div><div>redis-dump -u 127.0.0.1:6379 -d 15 &gt; test.json</div><div># 有密码</div><div>redis-dump -u :123456@192.168.0.112:6379 &gt; test.json</div></div><div><span style="font-size: 9pt;"><br/></span></div><div><span style="color: rgb(214, 214, 214);">redis-dump导入</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt; test.json redis-load -u 127.0.0.1:6379</div><div># 有密码</div><div>&lt; test.json redis-load -u :123456@127.0.0.1:6379</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">以二进制形式导入,解决乱码问题</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>E:\&gt;&lt; test.json redis-load -u 127.0.0.1:6379</div><div>ERROR (Yajl::ParseError): lexical error: invalid bytes in UTF8 string.</div><div>          26923,&quot;type&quot;:&quot;set&quot;,&quot;value&quot;:[&quot;��\u0000\u0005sr\u0000Corg.spri</div><div>                     (right here) ------^</div><div><br/></div><div>E:\&gt;&lt; test.json redis-load -n -u 127.0.0.1:6379</div><div><br/></div><div>E:\&gt;</div></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>spring.main.allow-bean-definition-overriding : true</div></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>在SpringCloud中,有两种调用服务时客户端的负载均衡策略,一个是Ribbon,一个是Feign</div><div>Ribbon是一个基于Http端的负载均衡,通过在Configuration中配置RestTemplate来进行调用,可以自定义负载均衡的方式</div><div>Feign是一个通过本地接口的形式来进行调用服务的,其中Feign中默认引入了Ribbon,在线上开发中,我还是比较倾向用Feign,</div><div>因为Feign中以接口的形式进行调用服务,看起来简洁,而且Feign中还可以增加熔断器,来进行服务的熔断和降级,防止服务调用中的服务的雪崩</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">@LoadBalanced</span></div><div><span style="color: rgb(214, 214, 214);">RestTemplate</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>RestTemplate只是类似于HttpClient的一个发送REST风格的请求的类</div><div>是没有办法去识别所谓的EUREKA服务名的</div><div>要用@LoadBalanced注解修饰的RestTemplate才能实现服务名的调用</div><div>@LoadBalanced是Netflix的ribbon中的一个负载均衡的注解，这个注解加上之后，有3件事情要处理：</div><div>    1. 从负载均衡器中选一个对应的服务实例(所有的服务名实例都放在负载均衡器中的serverlist)。</div><div>    2. 从1中挑选的实例请求内容。</div><div>    3. 由服务名转为真正使用的ip地址</div></div><div><br/></div><div>eureka.yml</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>eureka:</div><div>  dashboard:</div><div>    path: /eureka-ui</div><div>  server:</div><div>    wait-time-in-ms-when-sync-empty: 0   #在eureka服务器获取不到集群里对等服务器上的实例时，需要等待的时间，单机默认0</div><div>    shouldUseReadOnlyResponseCache: true #eureka是CAP理论种基于AP策略，为了保证强一致性关闭此切换CP 默认不关闭 false关闭</div><div>    enable-self-preservation: false    #关闭服务器自我保护，客户端心跳检测15分钟内错误达到80%服务会保护，导致别人还认为是好用的服务</div><div>    eviction-interval-timer-in-ms: 60000 #清理间隔（单位毫秒，默认是60*1000）5秒将客户端剔除的服务在服务注册列表中剔除#</div><div>    response-cache-update-interval-ms: 3000  #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上 #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上默认30s</div><div>    response-cache-auto-expiration-in-seconds: 180   #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。</div><div>    renewal-percent-threshold: 0.49  #  指定每分钟需要收到的续约次数的阈值，默认值就是：0.85</div><div>  client:</div><div>    register-with-eureka: false  #false:不作为一个客户端注册到注册中心,是否将自身的实例信息注册到eureka服务器</div><div>    fetch-registry: false      #为true时，可以启动，但报异常：Cannot execute request on any known server ，是否从eureka服务端获取注册信息，消费者需要配置true</div><div>                               #如果设置多个eureka时，需要设置 eureka.client.fetchRegistry=true,表示多个服务器之间的数据同步。单个节点直接设置成false即可。</div><div>    instance-info-replication-interval-seconds: 10</div><div>    registry-fetch-interval-seconds: 30  #从eureka服务端获取注册信息的间隔时间</div><div>    service-url:</div><div>      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/</div><div>  instance:</div><div>    hostname: localhost</div><div>    prefer-ip-address: true</div><div>    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}</div><div>    lease-renewal-interval-in-seconds: 10    # 续约更新时间间隔（默认30秒），eureka客户端向服务端发送心跳的时间间隔</div><div>    lease-expiration-duration-in-seconds: 30 # 续约到期时间（默认90秒）</div><div><br/></div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">restapi</span></div><div><div><br/></div><table style="border-collapse: collapse; min-width: 100%;"><colgroup><col style="width: 125px;"></col><col style="width: 322px;"></col><col style="width: 327px;"></col><col style="width: 82px;"></col></colgroup><tbody><tr><td style="width: 125px; padding: 8px; border: 1px solid;"><div><span style="font-weight: bold;">POST</span></div></td><td style="width: 322px; padding: 8px; border: 1px solid;"><div><a href="http://host:port/users">http://host:port/users</a>  </div></td><td style="width: 327px; padding: 8px; border: 1px solid;"><div>Data: name = Foobar</div></td><td style="width: 82px; padding: 8px; border: 1px solid;"><div>增</div></td></tr><tr><td style="width: 125px; padding: 8px; border: 1px solid;"><div><span style="font-weight: bold;">GET</span></div></td><td style="width: 322px; padding: 8px; border: 1px solid;"><div><a href="http://host:port/users">http://host:port/users</a></div></td><td style="width: 327px; padding: 8px; border: 1px solid;"><div><br/></div></td><td style="width: 82px; padding: 8px; border: 1px solid;"><div>查</div></td></tr><tr><td style="width: 125px; padding: 8px; border: 1px solid;"><div><span style="font-weight: bold;">GET</span></div></td><td style="width: 322px; padding: 8px; border: 1px solid;"><div><a href="http://host:port/users/123">http://host:port/users/123</a></div></td><td style="width: 327px; padding: 8px; border: 1px solid;"><div><br/></div></td><td style="width: 82px; padding: 8px; border: 1px solid;"><div>查</div></td></tr><tr><td style="width: 125px; padding: 8px; border: 1px solid;"><div><span style="font-weight: bold;">PUT</span></div></td><td style="width: 322px; padding: 8px; border: 1px solid;"><div><a href="http://host:port/users/123">http://host:port/users/123</a></div></td><td style="width: 327px; padding: 8px; border: 1px solid;"><div>Data: name = New Foobar</div></td><td style="width: 82px; padding: 8px; border: 1px solid;"><div>改</div></td></tr><tr><td style="width: 125px; padding: 8px; border: 1px solid;"><div><span style="font-weight: bold;">DELETE</span></div></td><td style="width: 322px; padding: 8px; border: 1px solid;"><div><a href="http://host:port/users/123">http://host:port/users/123</a></div></td><td style="width: 327px; padding: 8px; border: 1px solid;"><div><br/></div></td><td style="width: 82px; padding: 8px; border: 1px solid;"><div>删</div></td></tr></tbody></table><div><span style="color: rgb(214, 214, 214);">JS方便查看后台时间</span></div></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>Date.prototype.fmt= function(fmt) {</div><div>    let ret;</div><div>    const opt = {</div><div>        &quot;Y+&quot;: this.getFullYear().toString(),        // 年</div><div>        &quot;m+&quot;: (this.getMonth() + 1).toString(),     // 月</div><div>        &quot;d+&quot;: this.getDate().toString(),            // 日</div><div>        &quot;H+&quot;: this.getHours().toString(),           // 时</div><div>        &quot;M+&quot;: this.getMinutes().toString(),         // 分</div><div>        &quot;S+&quot;: this.getSeconds().toString()          // 秒</div><div>        // 有其他格式化字符需求可以继续添加，必须转化成字符串</div><div>    };</div><div>    for (let k in opt) {</div><div>        ret = new RegExp(&quot;(&quot; + k + &quot;)&quot;).exec(fmt);</div><div>        if (ret) {</div><div>            fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, &quot;0&quot;)))</div><div>        };</div><div>    };</div><div>    return fmt;</div><div>}</div></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>new Date(1619312697000).fmt(&quot;YYYY-mm-dd HH:MM:SS&quot;)</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">chrome书签位置</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>C:\Users\Administrator\AppData\Local\Google\Chrome\User Data\Default\Bookmarks</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">swagger2</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>mvn swagger2markup:convertSwagger2markup</div><div>mvn generate-resources</div></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;!-- swagger2 api--&gt;</div><div>&lt;dependency&gt;</div><div>    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</div><div>    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</div><div>    &lt;version&gt;3.0.0&lt;/version&gt;</div><div>&lt;/dependency&gt;</div><div>&lt;!-- 生成ASCIIDOC swagger相关 --&gt;</div><div>&lt;dependency&gt;</div><div>    &lt;groupId&gt;io.github.swagger2markup&lt;/groupId&gt;</div><div>    &lt;artifactId&gt;swagger2markup&lt;/artifactId&gt;</div><div>    &lt;version&gt;1.3.1&lt;/version&gt;</div><div>&lt;/dependency&gt;</div></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>       &lt;!-- 生成ASCIIDOC swagger相关 --&gt;</div><div>       &lt;plugin&gt;</div><div>           &lt;groupId&gt;io.github.swagger2markup&lt;/groupId&gt;</div><div>           &lt;artifactId&gt;swagger2markup-maven-plugin&lt;/artifactId&gt;</div><div>           &lt;version&gt;1.2.0&lt;/version&gt;</div><div>           &lt;configuration&gt;</div><div>               &lt;!--项目启动端口--&gt;</div><div>               &lt;swaggerInput&gt;http://localhost:8088/v2/api-docs&lt;/swaggerInput&gt;</div><div>               &lt;!-- 生成为单个文档，输出路径</div><div>               &lt;outputFile&gt;src/main/doc/api&lt;/outputFile&gt;--&gt;</div><div>               &lt;!-- 生成为多个文档，输出路径 --&gt;</div><div>               &lt;outputDir&gt;docs/generated&lt;/outputDir&gt;</div><div>               &lt;config&gt;</div><div>                   &lt;!-- CONFLUENCE_MARKUP  ASCIIDOC  MARKDOWN--&gt;</div><div>                   &lt;swagger2markup.markupLanguage&gt;ASCIIDOC&lt;/swagger2markup.markupLanguage&gt;</div><div>                   &lt;swagger2markup.pathsGroupedBy&gt;TAGS&lt;/swagger2markup.pathsGroupedBy&gt;</div><div>               &lt;/config&gt;</div><div>           &lt;/configuration&gt;</div><div>       &lt;/plugin&gt;</div><div><br/></div><div><br/></div><div>       &lt;!--生成HTML和 PDF--&gt;</div><div>       &lt;plugin&gt;</div><div>           &lt;groupId&gt;org.asciidoctor&lt;/groupId&gt;</div><div>           &lt;artifactId&gt;asciidoctor-maven-plugin&lt;/artifactId&gt;</div><div>           &lt;version&gt;1.5.3&lt;/version&gt;</div><div>           &lt;!-- Include Asciidoctor PDF for pdf generation --&gt;</div><div>           &lt;dependencies&gt;</div><div>               &lt;dependency&gt;</div><div>                   &lt;groupId&gt;org.asciidoctor&lt;/groupId&gt;</div><div>                   &lt;artifactId&gt;asciidoctorj-pdf&lt;/artifactId&gt;</div><div>                   &lt;version&gt;1.5.0-alpha.10.1&lt;/version&gt;</div><div>               &lt;/dependency&gt;</div><div>               &lt;dependency&gt;</div><div>                   &lt;groupId&gt;org.jruby&lt;/groupId&gt;</div><div>                   &lt;artifactId&gt;jruby-complete&lt;/artifactId&gt;</div><div>                   &lt;version&gt;1.7.21&lt;/version&gt;</div><div>               &lt;/dependency&gt;</div><div>           &lt;/dependencies&gt;</div><div>           &lt;!-- Configure generic document generation settings --&gt;</div><div>           &lt;configuration&gt;</div><div>               &lt;sourceDirectory&gt;docs/generated&lt;/sourceDirectory&gt;</div><div>               &lt;sourceHighlighter&gt;coderay&lt;/sourceHighlighter&gt;</div><div>               &lt;attributes&gt;</div><div>                   &lt;toc&gt;left&lt;/toc&gt;</div><div>               &lt;/attributes&gt;</div><div>           &lt;/configuration&gt;</div><div>           &lt;!-- Since each execution can only handle one backend, run</div><div>                separate executions for each desired output type --&gt;</div><div>           &lt;executions&gt;</div><div>               &lt;execution&gt;</div><div>                   &lt;id&gt;output-html&lt;/id&gt;</div><div>                   &lt;phase&gt;generate-resources&lt;/phase&gt;</div><div>                   &lt;goals&gt;</div><div>                       &lt;goal&gt;process-asciidoc&lt;/goal&gt;</div><div>                   &lt;/goals&gt;</div><div>                   &lt;configuration&gt;</div><div>                       &lt;backend&gt;html5&lt;/backend&gt;</div><div>                       &lt;outputDirectory&gt;docs/output/html&lt;/outputDirectory&gt;</div><div>                   &lt;/configuration&gt;</div><div>               &lt;/execution&gt;</div><div><br/></div><div><br/></div><div>               &lt;execution&gt;</div><div>                   &lt;id&gt;output-pdf&lt;/id&gt;</div><div>                   &lt;phase&gt;generate-resources&lt;/phase&gt;</div><div>                   &lt;goals&gt;</div><div>                       &lt;goal&gt;process-asciidoc&lt;/goal&gt;</div><div>                   &lt;/goals&gt;</div><div>                   &lt;configuration&gt;</div><div>                       &lt;backend&gt;pdf&lt;/backend&gt;</div><div>                       &lt;outputDirectory&gt;docs/output/pdf&lt;/outputDirectory&gt;</div><div>                   &lt;/configuration&gt;</div><div>               &lt;/execution&gt;</div><div><br/></div><div><br/></div><div>           &lt;/executions&gt;</div><div>       &lt;/plugin&gt;</div></div><div><br/></div><div><span style="color: rgb(214, 214, 214);">java8stream</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>Optional.ofNullable(usualExplain).ifPresent(p -&gt; {</div><div>    LambdaQueryWrapper&lt;ItemValuePo&gt; itemValuePoLambdaQueryWrapper = new LambdaQueryWrapper&lt;&gt;();</div><div>    itemValuePoLambdaQueryWrapper.eq(ItemValuePo::getDdCode, DDCODE);</div><div>    itemValuePoLambdaQueryWrapper.eq(ItemValuePo::getCode, usualExplainPo.getType());</div><div>    ItemValuePo itemValuePo = itemValueMapper.selectOne(itemValuePoLambdaQueryWrapper);</div><div><br/></div><div><br/></div><div>    p.setName(  Optional.ofNullable(itemValuePo).map(item -&gt; item.getName()).orElse(&quot;&quot;) );</div><div>});</div></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>Optional.ofNullable(customerBaseDto).map(CustomerBaseDto::getNickname).orElse(&quot;&quot;)</div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div>//UsualExplain-&gt;setName</div><div>usualExplainList.stream().forEach(usualExplain -&gt; usualExplain.setName(</div><div>    itemValuePoList.stream()</div><div>        .filter(itemValuePo -&gt; StrUtil.equals(itemValuePo.getCode(), usualExplain.getType()))</div><div>        .map(ItemValuePo::getName)</div><div>        .collect(Collectors.joining())</div><div>));</div></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>{List}.stream().map(CustomerDtoAssemble::dtoToResponseDto).collect(Collectors.toList())</div></div><div><br/></div><div><font color="#D6D6D6">右键添加打开cmd</font></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>Windows Registry Editor Version 5.00</div><div><br/></div><div>[HKEY_CLASSES_ROOT\Directory\shell\OpenCmdHere]</div><div>@=&quot;在此处打开命令窗口&quot;</div><div>&quot;Icon&quot;=&quot;cmd.exe&quot;</div><div><br/></div><div>[HKEY_CLASSES_ROOT\Directory\shell\OpenCmdHere\command]</div><div>@=&quot;cmd.exe /s /k pushd \&quot;%V\&quot;&quot;</div><div><br/></div><div>[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere]</div><div>@=&quot;在此处打开命令窗口&quot;</div><div>&quot;Icon&quot;=&quot;cmd.exe&quot;</div><div><br/></div><div>[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere\command]</div><div>@=&quot;cmd.exe /s /k pushd \&quot;%V\&quot;&quot;</div><div><br/></div><div>[HKEY_CLASSES_ROOT\Drive\shell\OpenCmdHere]</div><div>@=&quot;在此处打开命令窗口&quot;</div><div>&quot;Icon&quot;=&quot;cmd.exe&quot;</div><div><br/></div><div>[HKEY_CLASSES_ROOT\Drive\shell\OpenCmdHere\command]</div><div>@=&quot;cmd.exe /s /k pushd \&quot;%V\&quot;&quot;</div><div><br/></div><div>[HKEY_CLASSES_ROOT\LibraryFolder\background\shell\OpenCmdHere]</div><div>@=&quot;在此处打开命令窗口&quot;</div><div>&quot;Icon&quot;=&quot;cmd.exe&quot;</div><div><br/></div><div>[HKEY_CLASSES_ROOT\LibraryFolder\background\shell\OpenCmdHere\command]</div><div>@=&quot;cmd.exe /s /k pushd \&quot;%V\&quot;&quot;</div></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div></span>
</div></body></html>
