## page was renamed from wiki/undefine/undefine

o2o
 {{{
cd /opt/doublebass-service/v2.3/
./wechat-service.deploy.sh 
docker logs [-f] --tail=999 {id}
}}}

moinmoin export
 {{{
moin --config-dir=E:\program_flies\moin\1.9.11 --wiki-url=http://localhost/wiki/trantor/code/code_position export dump --target-dir=E:\program_flies\moin\output --username=AprilZ
}}}







restapi
HTTP请求方法并不是只有GET和POST，只是最常用的。据RFC2616标准（现行的HTTP/1.1）得知，通常有以下8种方法：OPTIONS、GET、HEAD、POST、PUT、DELETE、TRACE和CONNECT。
{{{#!csv ,
类型, URL, 参数, 功能
POST, http://host:port/users, Data: name = Foobar, 增
GET, http://host:port/users, , 查
GET, http://host:port/users/123, , 查
PUT, http://host:port/users/123, Data: name = New Foobar, 改
DELETE, http://host:port/users/123, , 删
}}}


chrome书签位置
{{{#!highlight 
C:\Users\Administrator\AppData\Local\Google\Chrome\User Data\Default\Bookmarks
}}}

swagger2
{{{#!highlight Bacth
mvn swagger2markup:convertSwagger2markup
mvn generate-resources
}}}
{{{#!highlight XML
       <!-- swagger2 api-->
       <dependency>
           <groupId>io.springfox</groupId>
           <artifactId>springfox-swagger2</artifactId>
           <version>3.0.0</version>
       </dependency>
       <!-- 生成ASCIIDOC swagger相关 -->
       <dependency>
           <groupId>io.github.swagger2markup</groupId>
           <artifactId>swagger2markup</artifactId>
           <version>1.3.1</version>
       </dependency>
}}}
{{{#!highlight XML
       <!-- 生成ASCIIDOC swagger相关 -->
       <plugin>
           <groupId>io.github.swagger2markup</groupId>
           <artifactId>swagger2markup-maven-plugin</artifactId>
           <version>1.2.0</version>
           <configuration>
               <!--项目启动端口-->
               <swaggerInput>http://localhost:8088/v2/api-docs</swaggerInput>
               <!-- 生成为单个文档，输出路径
               <outputFile>src/main/doc/api</outputFile>-->
               <!-- 生成为多个文档，输出路径 -->
               <outputDir>docs/generated</outputDir>
               <config>
                   <!-- CONFLUENCE_MARKUP  ASCIIDOC  MARKDOWN-->
                   <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
                   <swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>
               </config>
           </configuration>
       </plugin>


       <!--生成HTML和 PDF-->
       <plugin>
           <groupId>org.asciidoctor</groupId>
           <artifactId>asciidoctor-maven-plugin</artifactId>
           <version>1.5.3</version>
           <!-- Include Asciidoctor PDF for pdf generation -->
           <dependencies>
               <dependency>
                   <groupId>org.asciidoctor</groupId>
                   <artifactId>asciidoctorj-pdf</artifactId>
                   <version>1.5.0-alpha.10.1</version>
               </dependency>
               <dependency>
                   <groupId>org.jruby</groupId>
                   <artifactId>jruby-complete</artifactId>
                   <version>1.7.21</version>
               </dependency>
           </dependencies>
           <!-- Configure generic document generation settings -->
           <configuration>
               <sourceDirectory>docs/generated</sourceDirectory>
               <sourceHighlighter>coderay</sourceHighlighter>
               <attributes>
                   <toc>left</toc>
               </attributes>
           </configuration>
           <!-- Since each execution can only handle one backend, run
                separate executions for each desired output type -->
           <executions>
               <execution>
                   <id>output-html</id>
                   <phase>generate-resources</phase>
                   <goals>
                       <goal>process-asciidoc</goal>
                   </goals>
                   <configuration>
                       <backend>html5</backend>
                       <outputDirectory>docs/output/html</outputDirectory>
                   </configuration>
               </execution>


               <execution>
                   <id>output-pdf</id>
                   <phase>generate-resources</phase>
                   <goals>
                       <goal>process-asciidoc</goal>
                   </goals>
                   <configuration>
                       <backend>pdf</backend>
                       <outputDirectory>docs/output/pdf</outputDirectory>
                   </configuration>
               </execution>


           </executions>
       </plugin>
}}}

java8stream
{{{#!highlight Java
       Optional.ofNullable(usualExplain).ifPresent(p -> {
           LambdaQueryWrapper<ItemValuePo> itemValuePoLambdaQueryWrapper = new LambdaQueryWrapper<>();
           itemValuePoLambdaQueryWrapper.eq(ItemValuePo::getDdCode, DDCODE);
           itemValuePoLambdaQueryWrapper.eq(ItemValuePo::getCode, usualExplainPo.getType());
           ItemValuePo itemValuePo = itemValueMapper.selectOne(itemValuePoLambdaQueryWrapper);
       
           p.setName(  Optional.ofNullable(itemValuePo).map(item -> item.getName()).orElse("") );
       });
}}}

{{{#!highlight java
       Optional.ofNullable(customerBaseDto).map(CustomerBaseDto::getNickname).orElse("")

       //UsualExplain->setName
       usualExplainList.stream().forEach(usualExplain -> usualExplain.setName(
           itemValuePoList.stream()
               .filter(itemValuePo -> StrUtil.equals(itemValuePo.getCode(), usualExplain.getType()))
               .map(ItemValuePo::getName)
               .collect(Collectors.joining())
       ));
}}}

{{{#!highlight java
{List}.stream().map(CustomerDtoAssemble::dtoToResponseDto).collect(Collectors.toList())
}}}

右键添加打开cmd
{{{#!highlight reg
Windows Registry Editor Version 5.00

[HKEY_CLASSES_ROOT\Directory\shell\OpenCmdHere]
@="在此处打开命令窗口"
"Icon"="cmd.exe"

[HKEY_CLASSES_ROOT\Directory\shell\OpenCmdHere\command]
@="cmd.exe /s /k pushd \"%V\""

[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere]
@="在此处打开命令窗口"
"Icon"="cmd.exe"

[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere\command]
@="cmd.exe /s /k pushd \"%V\""

[HKEY_CLASSES_ROOT\Drive\shell\OpenCmdHere]
@="在此处打开命令窗口"
"Icon"="cmd.exe"

[HKEY_CLASSES_ROOT\Drive\shell\OpenCmdHere\command]
@="cmd.exe /s /k pushd \"%V\""

[HKEY_CLASSES_ROOT\LibraryFolder\background\shell\OpenCmdHere]
@="在此处打开命令窗口"
"Icon"="cmd.exe"

[HKEY_CLASSES_ROOT\LibraryFolder\background\shell\OpenCmdHere\command]
@="cmd.exe /s /k pushd \"%V\""
}}}
